name: Update README

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}

jobs:
  update-activity:
    runs-on: ubuntu-22.04
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v5.5.0
        with:
          go-version: "1.21"

      - name: Install markscribe
        run: |
          go install github.com/muesli/markscribe@v0.6.0

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.BADGES_TOKEN }}

      - name: Update README
        run: |
          echo "üñ® generate readme from template"
          markscribe -write README.md README.md.gtpl
        env:
          GITHUB_TOKEN: ${{ secrets.BADGES_TOKEN }}

      - name: Fix comments syntax
        run: |
          echo "üîß Fixing comments syntax (uggly hack)"
          sed -i 's/\[!--/<!--/g' README.md
          sed -i 's/--\]/-->/g' README.md

      - name: Prettiyfy README.md
        run: |
          echo "üìù Prettifying README.md"
          npx prettier@3.0.3 README.md --write

      - name: Add & Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: "docs(README): update my activity sections"
          author_name: ${{ vars.GIT_AUTHOR_NAME }}
          author_email: ${{ vars.GIT_AUTHOR_EMAIL }}
          committer_name: ${{ vars.GIT_AUTHOR_NAME }}
          committer_email: ${{ vars.GIT_AUTHOR_EMAIL }}
        env:
          GITHUB_TOKEN: ${{ secrets.BADGES_TOKEN }}

  update-badges:
    runs-on: ubuntu-22.04
    needs: update-activity
    steps:
      - name: Update My Badges
        run: npx update-my-badges ${{github.repository_owner}}
        env:
          GITHUB_TOKEN: ${{ secrets.BADGES_TOKEN }}

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Check out repository
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 2
          token: ${{ secrets.BADGES_TOKEN }}

      - name: Reset last commit if "Update badges" from update-my-badges (hack)
        run: |
          LAST_COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "üëÄ Last commit message is '$LAST_COMMIT_MESSAGE'"
          if [[ "$LAST_COMMIT_MESSAGE" == "Update badges" ]]; then
            echo "‚óÄÔ∏è Resetting last commit"
            git reset HEAD~1
          else
            echo "üëå Last commit is not from update-my-badges"
          fi

      - name: Prettiyfy README.md
        run: |
          echo "üìù Prettifying README.md"
          npx prettier@3.0.3 README.md --write

      - name: Commit changes if necessary
        run: |
          if [[ $(git status -s) ]]; then
            git commit --all -S --message="docs(README): update my badges"
            git push --force-with-lease
            echo "üëç Commit amended"
          else
            echo "üëå No changes to commit"
          fi
